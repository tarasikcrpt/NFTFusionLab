# scripts/nft_creation.py

from web3 import Web3
from eth_account import Account

def create_nft_contract(web3, account, contract_abi, contract_bytecode):
    """
    Deploy a new NFT contract.

    :param web3: Web3 instance
    :param account: Ethereum account
    :param contract_abi: ABI of the NFT contract
    :param contract_bytecode: Bytecode of the NFT contract
    :return: Address of the deployed contract
    """
    NFTContract = web3.eth.contract(abi=contract_abi, bytecode=contract_bytecode)
    transaction = NFTContract.constructor().buildTransaction({
        'from': account.address,
        'gas': 3000000,
        'gasPrice': web3.toWei('20', 'gwei'),
        'nonce': web3.eth.getTransactionCount(account.address)
    })
    signed_tx = web3.eth.account.sign_transaction(transaction, private_key=account.private_key)
    tx_hash = web3.eth.sendRawTransaction(signed_tx.rawTransaction)
    tx_receipt = web3.eth.waitForTransactionReceipt(tx_hash)
    return tx_receipt.contractAddress

def mint_nft(web3, contract_address, account, contract_abi, token_id, token_uri):
    """
    Mint a new NFT.

    :param web3: Web3 instance
    :param contract_address: Address of the NFT contract
    :param account: Ethereum account
    :param contract_abi: ABI of the NFT contract
    :param token_id: Token ID of the NFT
    :param token_uri: URI of the NFT metadata
    :return: Transaction receipt
    """
    NFTContract = web3.eth.contract(address=contract_address, abi=contract_abi)
    transaction = NFTContract.functions.mint(account.address, token_id, token_uri).buildTransaction({
        'from': account.address,
        'gas': 200000,
        'gasPrice': web3.toWei('20', 'gwei'),
        'nonce': web3.eth.getTransactionCount(account.address)
    })
    signed_tx = web3.eth.account.sign_transaction(transaction, private_key=account.private_key)
    tx_hash = web3.eth.sendRawTransaction(signed_tx.rawTransaction)
    return web3.eth.waitForTransactionReceipt(tx_hash)
